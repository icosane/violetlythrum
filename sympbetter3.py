from math import *

def f(x):
    #return (x*x*x*x)
    #return cos(x)
    #return (1/(1+x*x))
    #return (x*x)+2*x
    return 2**(x**2)

def simpson(f, a, b, n):

    h=(b-a)/n #разбиение выбранного интервала на отрезки

    s=f(a)+f(b) #сумма начального и конечного значений

    for k in range(1, n, 2):
       s += 4 * f(a + k * h) #средние точки, k - нечетное

    for k in range(2, n-1, 2): 
       s += 2 * f(a + k * h) #нач/конечное, k - четные

    return s * h / 3

#начальные условия
a = 0
b = 2
e = 1.0e-2 #точность

n = 2 #число разбиений; 
#значение интеграла при n=2 и след приближении (начальные)
integ1 = 1.0 #начальное значение интеграла
integ2 = 0.0 #следующее значение интеграла при n в 2 раза > предыдущего значения n
g = 0
while ((1/15)*abs(integ1 - integ2)> e): #(1/15) из правила Рунге для формулы Симпсона;
        g +=1
        #integ1=integ2
        integ1=(simpson(f, a, b, n))
        n *= 2 #n*2
        integ2 =(simpson(f, a, b, n))
print("Число итераций: ", g)
print("Количество шагов разбиения интервала: ",n)
print("Вычисленный интеграл: ",integ2)